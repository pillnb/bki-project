
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PegawaiScalarFieldEnum = {
  nup: 'nup',
  nama_pegawai: 'nama_pegawai',
  status_pegawai: 'status_pegawai',
  jabatan: 'jabatan',
  tempat_lahir: 'tempat_lahir',
  tanggal_lahir: 'tanggal_lahir',
  alamat: 'alamat',
  warga_negara: 'warga_negara',
  agama: 'agama',
  no_telepon: 'no_telepon',
  email: 'email',
  password: 'password',
  role: 'role',
  username: 'username',
  id: 'id',
  nik: 'nik'
};

exports.Prisma.PelatihanScalarFieldEnum = {
  id_pelatihan: 'id_pelatihan',
  nup: 'nup',
  kualifikasi: 'kualifikasi',
  penyelenggara: 'penyelenggara',
  nomor_sertifikat: 'nomor_sertifikat',
  tanggal_awal: 'tanggal_awal',
  masa_berlaku: 'masa_berlaku',
  status: 'status',
  keterangan_utilisasi: 'keterangan_utilisasi',
  tahun: 'tahun',
  tanggal_akhir: 'tanggal_akhir'
};

exports.Prisma.Pengalaman_kerjaScalarFieldEnum = {
  id_pengalaman: 'id_pengalaman',
  nup: 'nup',
  tahun: 'tahun',
  pengalaman_kerja: 'pengalaman_kerja',
  perusahaan: 'perusahaan'
};

exports.Prisma.SuratTugasScalarFieldEnum = {
  id: 'id',
  nomor_surat: 'nomor_surat',
  klien: 'klien',
  pekerjaan: 'pekerjaan',
  status_pekerjaan: 'status_pekerjaan',
  no_service_order: 'no_service_order',
  bidang_pekerjaan: 'bidang_pekerjaan',
  peralatan_inspeksi: 'peralatan_inspeksi',
  kebutuhan_material: 'kebutuhan_material',
  lokasi_pekerjaan: 'lokasi_pekerjaan',
  tanggal_berangkat: 'tanggal_berangkat',
  tanggal_kembali: 'tanggal_kembali',
  transportasi_operasional: 'transportasi_operasional',
  transportasi_ditanggung_klien: 'transportasi_ditanggung_klien',
  transportasi_asal_tujuan: 'transportasi_asal_tujuan',
  transportasi_dinas: 'transportasi_dinas',
  tiket: 'tiket',
  penginapan: 'penginapan',
  keterangan_lain: 'keterangan_lain',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  spi: 'spi',
  wbs: 'wbs',
  status: 'status'
};

exports.Prisma.PegawaiSuratTugasScalarFieldEnum = {
  id: 'id',
  suratTugasId: 'suratTugasId',
  pegawaiNup: 'pegawaiNup',
  jabatan: 'jabatan',
  approved: 'approved',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.StatusSuratTugas = exports.$Enums.StatusSuratTugas = {
  DIAJUKAN: 'DIAJUKAN',
  MENUNGGU_APPROVAL: 'MENUNGGU_APPROVAL',
  SELESAI: 'SELESAI',
  DITOLAK: 'DITOLAK'
};

exports.Prisma.ModelName = {
  pegawai: 'pegawai',
  pelatihan: 'pelatihan',
  pengalaman_kerja: 'pengalaman_kerja',
  SuratTugas: 'SuratTugas',
  PegawaiSuratTugas: 'PegawaiSuratTugas'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
